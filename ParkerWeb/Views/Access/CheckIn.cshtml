@model ParkerWeb.Models.UserModel.Users
@{
    Layout = "~/Views/Shared/_LayoutAccess.cshtml";
}


<h4 class="mt-1 mb-5 pb-1 text-center">Ingresa tus datos</h4>
<form action="@Url.Action("CheckIn","Access")" method="post" id="Form" novalidate>
    <div class="row mb-3">
        <div class="col-md-6">
            <div class="form-floating mb-3 mb-md-0">
                @Html.TextBoxFor(m => m.userName, new { @class = "form-control", autocomplete = "off", @id = "txtName", @placeholder = ".", value = ViewData["userName"], required = "required", data_msg_required = "Por favor, ingresa un nombre" })
                @Html.Label("txtName", "Nombre")
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-floating mb-3 mb-md-0">
                @Html.TextBoxFor(m => m.userLastName, new { @class = "form-control", autocomplete = "off", @id = "txtLastName", @placeholder = ".", value = ViewData["userLastName"], required = "required", data_msg_required = "Por favor, ingresa un apellido" })
                @Html.Label("txtLastName", "Apellido")
            </div>
        </div>
    </div>
    <div class="form-floating mb-3">
        @Html.TextBoxFor(m => m.userMail, new { @class = "form-control", autocomplete = "off", @id = "txtMail", @placeholder = ".", value = ViewData["userMail"], required = "required", data_msg_required = "Por favor, ingresa un correo" })
        @Html.Label("txtMail", "Correo electronico")
    </div>

    @{
        if (ViewBag.Error != null)
        {
            <div class="row mb-3">
                <div class="alert alert-danger" role="alert">
                    @ViewBag.Error
                </div>
            </div>
        }
    }
    <div class="mt-4 mb-0">
        <div class="d-grid">
            <button class="btn btn-dark btn-block mb-2" type="submit">Crear cuenta</button>
            <a class="btn btn-dark btn-block mb-2" href="@Url.Action("Index","Access")">Iniciar Sesión</a>
            <a class="btn btn-dark btn-block mb-2" href="@Url.Action("Index","Home")">Pagina Principal</a>
        </div>
    </div>
</form>




@section scripts{
    <script>
        $(document).ready(function () {
            $('#Form').validate({
                rules: {
                    userName: {
                        required: true
                    },
                    userLastName: {
                        required: true
                    },
                    userMail: {
                        required: true,
                        email: true
                    }
                },
                messages: {
                    userName: {
                        required: "Por favor, ingresa un nombre"
                    },
                    userLastName: {
                        required: "Por favor, ingresa un apellido"
                    },
                    userMail: {
                        required: "Por favor, ingresa un correo electrónico",
                        email: "Por favor, ingresa un correo electrónico válido"
                    }
                },
                errorElement: "div",
                errorClass: "invalid-feedback",
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid').removeClass('is-valid');
                    $(element).closest('.form-floating').removeClass('has-success').addClass('has-error');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid').addClass('is-valid');
                    $(element).closest('.form-floating').removeClass('has-error').addClass('has-success');
                },
                errorPlacement: function (error, element) {
                    if (element.closest('.form-floating').length) {
                        error.insertAfter(element.closest('.form-floating'));
                    } else {
                        error.insertAfter(element);
                    }
                },
                submitHandler: function (form) {
                    // Aquí puedes realizar cualquier acción adicional antes de enviar el formulario, como una solicitud AJAX para verificar las credenciales
                    form.submit();
                }
            });

            // Limpiar los estilos de validación cuando se escriba en los campos
            $('input').on('input', function () {
                $(this).removeClass('is-invalid').closest('.form-floating').removeClass('has-error');
            });

            // Mostrar la notificación "toast" si existe un mensaje de éxito
            var successMessage = "@ViewBag.SuccessMessage";
            if (successMessage) {
                // Mostrar el mensaje de éxito en la notificación "toast"
                var toastBody = document.querySelector("#emailToast .toast-body");
                if (toastBody) {
                    toastBody.innerHTML = successMessage;
                }
                // Mostrar la notificación "toast"
                var emailToast = new bootstrap.Toast(document.getElementById("emailToast"));
                emailToast.show();
            }
        });
    </script>
}
